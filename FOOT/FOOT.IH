
/*
 * This file was generated by the SOM Compiler.
 * FileName: FOOT.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef FOOT_ih
#define FOOT_ih


/*
 * Passthru lines: File: "C.ih", "before"
 */
#define INCL_WINWORKPLACE
#include <os2.h>

#include "FOOT.h"

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

#ifndef SOM_CurrentClass
#define SOM_CurrentClass OneFootCClassData.parentMtab
#endif

#define OneFoot_MaxNoMethods 0

/*
 * Instance data
 */
typedef struct {
	int LeftOrRight;
} OneFootData;

/*
 * Instance variable access macros
 */
#define _LeftOrRight (somThis->LeftOrRight)

/*
 * Getdata macro
 */
#define OneFootGetData(somSelf) \
    ((OneFootData *) \
        SOM_DataResolve(somSelf, OneFootCClassData.instanceDataToken))

/*
 * Trace/Debug macro
 */
#ifndef OneFootMethodDebug
#define OneFootMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef OneFoot_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_OneFootCClassData.parentMtab
#undef SOMInstance
#define SOMInstance OneFootCClassData.parentMtab

#ifndef M_OneFoot_Class_Source
#define M_OneFoot_Class_Source
#endif    /* M_OneFoot_Class_Source */

/*
 * Generate the Apply Stubs.
 */

/*
 * Overridden method: wpDrop
 */
#pragma linkage(Foot_wpDrop, system)
SOM_Scope MRESULT   SOMLINK Foot_wpDrop(OneFoot *somSelf,
		HWND hwndCnr,
		PDRAGINFO pdrgInfo,
		PDRAGITEM pdrgItem);
#ifndef parent_wpDrop
static char *somMN_wpDrop = "wpDrop";
static somId somId_wpDrop = &somMN_wpDrop;
#define parent_wpDrop(somSelf,hwndCnr,pdrgInfo,pdrgItem) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpDrop)) \
	 (somSelf,hwndCnr,pdrgInfo,pdrgItem))
#endif
#define OneFootParent_wpDrop parent_wpDrop

/*
 * Overridden method: wpOpen
 */
#pragma linkage(Foot_wpOpen, system)
SOM_Scope HWND   SOMLINK Foot_wpOpen(OneFoot *somSelf,
		HWND hwndCnr,
		ULONG ulView,
		ULONG param);
#ifndef parent_wpOpen
static char *somMN_wpOpen = "wpOpen";
static somId somId_wpOpen = &somMN_wpOpen;
#define parent_wpOpen(somSelf,hwndCnr,ulView,param) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpOpen)) \
	 (somSelf,hwndCnr,ulView,param))
#endif
#define OneFootParent_wpOpen parent_wpOpen

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure OneFoottempClassData;

/*
 * Initialize the class data structure
 */
struct OneFootClassDataStructure OneFootClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct OneFootCClassDataStructure OneFootCClassData = {(somMethodTab *) NULL};

/*
 * Routines to create the class object
 */

/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t OneFootOM[] = {
    {    &somId_wpDrop,
         (somMethodProc *) Foot_wpDrop    },
    {    &somId_wpOpen,
         (somMethodProc *) Foot_wpOpen    },
};

static void OneFootsomInitializeClass ()
{
	int i;
	somOverrideMethod_t *omp;

/*
 * Override methods.
 */
	for (omp = OneFootOM, i = 0; i < 2; omp++, i++)
	    _somOverrideSMethod (OneFoottempClassData.classObject,
	        *(omp->methodId), omp->method);

}

#pragma linkage(OneFootsomCreateClass, system)
static void SOMLINK OneFootsomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    OneFoottempClassData.classObject = _somNew (mClsObj);
    _somInitClass (OneFoottempClassData.classObject,
		"OneFoot",
		pClsObj,
		sizeof(OneFootData),
		OneFoot_MaxNoMethods,
		OneFoot_MajorVersion,
		OneFoot_MinorVersion);
    OneFootCClassData.instanceDataToken = 
	_somGetInstanceToken(OneFoottempClassData.classObject);
    OneFootsomInitializeClass();
    OneFootCClassData.parentMtab =
	_somGetPClsMtab(OneFoottempClassData.classObject);
    _somSetClassData(OneFoottempClassData.classObject, (somClassDataStructure *)&OneFootClassData);
    _somClassReady(OneFoottempClassData.classObject);
    /* make newly created class object visible */
    OneFootClassData.classObject = OneFoottempClassData.classObject;
}

OneFoot * SOMLINK OneFootNewClass (integer4 scemajorVersion,
		integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != OneFoot_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > OneFoot_MinorVersion))) {
	somPrintf("OneFootNewClass: Error, bad version numbers.\n");
	SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (OneFootClassData.classObject != (SOMAny *) NULL)
	return(OneFootClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
	SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    WPAbstractNewClass(1,2);	/* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("WPAbstract"), 1, 2);
    if (pClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoParentClass);

    /* Use parent's metaclass */ 
    mClsObj = SOM_GetClass(pClsObj);

    somConstructClass(OneFootsomCreateClass, pClsObj, mClsObj,
		     &OneFoottempClassData);
    return (OneFootClassData.classObject);
}

#endif                   /* OneFoot_Class_Source */

#endif       /* FOOT_ih */
